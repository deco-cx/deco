// DO NOT EDIT. This file is generated by deco.
// This file SHOULD be checked into source version control.
// This file is automatically updated during development when running `dev.ts`.

import config from "./deno.json" assert { type: "json" };
import { context } from "$live/live.ts";
import * as account from "./blocks/account.ts";
import * as section from "./blocks/section.ts";
import * as $section0 from "./sections/Head.tsx";
import * as loader from "./blocks/loader.ts";
import * as page from "./blocks/page.ts";
import * as $page0 from "./components/LivePage.tsx";
import { configurable } from "$live/engine/adapters/fresh/manifest.ts";

const manifest = {
  "sections": {
    "./sections/Head.tsx": section.default.adapt($section0.default),
  },
  "pages": {
    "./components/LivePage.tsx": page.default.adapt($page0.default),
  },
  "routes": {},
  "islands": {},
  "config": config,
  "baseUrl": import.meta.url,
  "definitions": {
    "./sections/Head.tsx": {
      "type": "object",
      "properties": {
        "output": { "$ref": "#/definitions/$live/blocks/section.ts@Section" },
        "input": {
          "type": "object",
          "properties": {
            "title": { "title": "Title", "type": ["string", "null"] },
            "description": {
              "title": "Description",
              "type": ["string", "null"],
            },
            "url": { "title": "Url", "type": ["string", "null"] },
            "imageUrl": { "title": "Image Url", "type": ["string", "null"] },
            "faviconUrl": {
              "title": "Favicon Url",
              "type": ["string", "null"],
            },
            "styleUrls": { "title": "Style Urls", "type": "string" },
            "inlineStyles": { "title": "Inline Styles", "type": "string" },
            "scriptUrls": { "title": "Script Urls", "type": "string" },
            "inlineScripts": { "title": "Inline Scripts", "type": "string" },
            "themeColor": {
              "title": "Theme Color",
              "type": ["string", "null"],
            },
          },
          "required": [],
        },
      },
      "required": ["input", "output"],
      "title": "./sections/Head.tsx",
    },
    "./components/LivePage.tsx": {
      "type": "object",
      "properties": {
        "output": { "$ref": "#/definitions/$live/blocks/page.ts@Page" },
        "input": {
          "type": "object",
          "properties": {
            "sections": {
              "title": "Sections",
              "$ref": "#/definitions/$live/blocks/section.ts#Section",
            },
          },
          "required": ["sections"],
        },
      },
      "required": ["input", "output"],
      "title": "./components/LivePage.tsx",
    },
    "$live/blocks/section.ts@Section": { "type": "object" },
    "$live/blocks/page.ts@Page": { "type": "object" },
  },
};

context.manifest = manifest;
export default configurable(manifest);
