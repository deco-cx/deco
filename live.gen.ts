// DO NOT EDIT. This file is generated by deco.
// This file SHOULD be checked into source version control.
// This file is automatically updated during development when running `dev.ts`.

import config from "./deno.json" assert { type: "json" };
import * as $$0 from "./routes/[...catchall].tsx";
import * as $$$$0 from "./handlers/router.ts";
import * as $$$$1 from "./handlers/fresh.ts";
import * as $$$$$0 from "./pages/LivePage.tsx";
import * as $$$$$$0 from "./sections/Head.tsx";
import * as $$$$$$$0 from "./matchers/MatchDate.ts";
import * as $$$$$$$1 from "./matchers/MatchUserAgent.ts";
import * as $$$$$$$2 from "./matchers/MatchSite.ts";
import * as $$$$$$$3 from "./matchers/MatchMulti.ts";
import * as $$$$$$$4 from "./matchers/MatchRandom.ts";
import * as $$$$$$$5 from "./matchers/MatchEnvironment.ts";
import * as $$$$$$$6 from "./matchers/MatchAlways.ts";
import * as $$$$$$$$0 from "./flags/audience.ts";
import * as $$$$$$$$1 from "./flags/everyone.ts";
import { configurable } from "$live/engine/adapters/fresh/manifest.ts";

const manifest = {
  "routes": {
    "./routes/[...catchall].tsx": $$0,
  },
  "handlers": {
    "./handlers/router.ts": $$$$0,
    "./handlers/fresh.ts": $$$$1,
  },
  "pages": {
    "./pages/LivePage.tsx": $$$$$0,
  },
  "sections": {
    "./sections/Head.tsx": $$$$$$0,
  },
  "matchers": {
    "./matchers/MatchDate.ts": $$$$$$$0,
    "./matchers/MatchUserAgent.ts": $$$$$$$1,
    "./matchers/MatchSite.ts": $$$$$$$2,
    "./matchers/MatchMulti.ts": $$$$$$$3,
    "./matchers/MatchRandom.ts": $$$$$$$4,
    "./matchers/MatchEnvironment.ts": $$$$$$$5,
    "./matchers/MatchAlways.ts": $$$$$$$6,
  },
  "flags": {
    "./flags/audience.ts": $$$$$$$$0,
    "./flags/everyone.ts": $$$$$$$$1,
  },
  "islands": {},
  "config": config,
  "baseUrl": import.meta.url,
  "schemas": {
    "definitions": {
      ".": {
        "routes": {
          "[...catchall].tsx@EntrypointConfig": {
            "type": "object",
            "allOf": [],
            "properties": {
              "handler": { "title": "Handler", "$ref": "#/root/handlers" },
            },
            "required": ["handler"],
            "title": "./routes/[...catchall].tsx@EntrypointConfig",
            "$id": "./routes/[...catchall].tsx@EntrypointConfig",
          },
          "[...catchall].tsx": {
            "title": "./routes/[...catchall].tsx",
            "type": "object",
            "allOf": [{
              "$ref":
                "#/definitions/./routes/[...catchall].tsx@EntrypointConfig",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "const": "./routes/[...catchall].tsx",
                "default": "./routes/[...catchall].tsx",
              },
            },
            "$id": "./routes/[...catchall].tsx",
          },
        },
        "record<string, Handler>": {
          "title": "Unknown record",
          "type": "object",
          "additionalProperties": { "$ref": "#/root/handlers" },
          "$id": "./record<string, Handler>",
        },
        "handlers": {
          "router.ts@RouterConfig": {
            "type": "object",
            "allOf": [],
            "properties": {
              "base": { "title": "Base", "type": ["string", "null"] },
              "routes": {
                "title": "Routes",
                "$ref": "#/definitions/./record<string, Handler>",
              },
            },
            "required": ["routes"],
            "title": "./handlers/router.ts@RouterConfig",
            "$id": "./handlers/router.ts@RouterConfig",
          },
          "router.ts": {
            "title": "./handlers/router.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/./handlers/router.ts@RouterConfig",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "const": "./handlers/router.ts",
                "default": "./handlers/router.ts",
              },
            },
            "$id": "./handlers/router.ts",
          },
          "fresh.ts@FreshConfig": {
            "type": "object",
            "allOf": [],
            "properties": {
              "component": { "title": "Component", "$ref": "#/root/pages" },
            },
            "required": ["component"],
            "title": "./handlers/fresh.ts@FreshConfig",
            "$id": "./handlers/fresh.ts@FreshConfig",
          },
          "fresh.ts": {
            "title": "./handlers/fresh.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/./handlers/fresh.ts@FreshConfig",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "const": "./handlers/fresh.ts",
                "default": "./handlers/fresh.ts",
              },
            },
            "$id": "./handlers/fresh.ts",
          },
        },
        "components": {
          "LivePage.tsx@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "sections": {
                "title": "Sections",
                "type": "array",
                "items": { "$ref": "#/root/sections" },
              },
            },
            "required": ["sections"],
            "title": "./components/LivePage.tsx@Props",
            "$id": "./components/LivePage.tsx@Props",
          },
        },
        "pages": {
          "LivePage.tsx": {
            "title": "./pages/LivePage.tsx",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/./components/LivePage.tsx@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "const": "./pages/LivePage.tsx",
                "default": "./pages/LivePage.tsx",
              },
            },
            "$id": "./pages/LivePage.tsx",
          },
        },
        "sections": {
          "Head.tsx@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "title": { "title": "Title", "type": ["string", "null"] },
              "description": {
                "title": "Description",
                "type": ["string", "null"],
              },
              "url": { "title": "Url", "type": ["string", "null"] },
              "imageUrl": { "title": "Image Url", "type": ["string", "null"] },
              "faviconUrl": {
                "title": "Favicon Url",
                "type": ["string", "null"],
              },
              "styleUrls": {
                "title": "Style Urls",
                "type": "array",
                "items": { "type": "string" },
              },
              "inlineStyles": {
                "title": "Inline Styles",
                "type": "array",
                "items": { "type": "string" },
              },
              "scriptUrls": {
                "title": "Script Urls",
                "type": "array",
                "items": { "type": "string" },
              },
              "inlineScripts": {
                "title": "Inline Scripts",
                "type": "array",
                "items": { "type": "string" },
              },
              "themeColor": {
                "title": "Theme Color",
                "type": ["string", "null"],
              },
            },
            "required": [],
            "title": "./sections/Head.tsx@Props",
            "$id": "./sections/Head.tsx@Props",
          },
          "Head.tsx": {
            "title": "./sections/Head.tsx",
            "type": "object",
            "allOf": [{ "$ref": "#/definitions/./sections/Head.tsx@Props" }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "const": "./sections/Head.tsx",
                "default": "./sections/Head.tsx",
              },
            },
            "$id": "./sections/Head.tsx",
          },
        },
        "matchers": {
          "MatchDate.ts@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "start": {
                "title": "Start",
                "type": ["string", "null"],
                "format": "date-time",
              },
              "end": {
                "title": "End",
                "type": ["string", "null"],
                "format": "date-time",
              },
            },
            "required": [],
            "title": "./matchers/MatchDate.ts@Props",
            "$id": "./matchers/MatchDate.ts@Props",
          },
          "MatchDate.ts": {
            "title": "./matchers/MatchDate.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/./matchers/MatchDate.ts@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "const": "./matchers/MatchDate.ts",
                "default": "./matchers/MatchDate.ts",
              },
            },
            "$id": "./matchers/MatchDate.ts",
          },
          "MatchUserAgent.ts@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "includes": { "title": "Includes", "type": ["string", "null"] },
              "match": { "title": "Match", "type": ["string", "null"] },
            },
            "required": [],
            "title": "./matchers/MatchUserAgent.ts@Props",
            "$id": "./matchers/MatchUserAgent.ts@Props",
          },
          "MatchUserAgent.ts": {
            "title": "./matchers/MatchUserAgent.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/./matchers/MatchUserAgent.ts@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "const": "./matchers/MatchUserAgent.ts",
                "default": "./matchers/MatchUserAgent.ts",
              },
            },
            "$id": "./matchers/MatchUserAgent.ts",
          },
          "MatchSite.ts@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "siteId": { "title": "Site Id", "type": "number" },
            },
            "required": ["siteId"],
            "title": "./matchers/MatchSite.ts@Props",
            "$id": "./matchers/MatchSite.ts@Props",
          },
          "MatchSite.ts": {
            "title": "./matchers/MatchSite.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/./matchers/MatchSite.ts@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "const": "./matchers/MatchSite.ts",
                "default": "./matchers/MatchSite.ts",
              },
            },
            "$id": "./matchers/MatchSite.ts",
          },
          "MatchMulti.ts@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "op": {
                "title": "Op",
                "anyOf": [{ "type": "string", "const": "or" }, {
                  "type": "string",
                  "const": "and",
                }],
              },
              "matchers": {
                "title": "Matchers",
                "type": "array",
                "items": { "$ref": "#/root/matchers" },
              },
            },
            "required": ["op", "matchers"],
            "title": "./matchers/MatchMulti.ts@Props",
            "$id": "./matchers/MatchMulti.ts@Props",
          },
          "MatchMulti.ts": {
            "title": "./matchers/MatchMulti.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/./matchers/MatchMulti.ts@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "const": "./matchers/MatchMulti.ts",
                "default": "./matchers/MatchMulti.ts",
              },
            },
            "$id": "./matchers/MatchMulti.ts",
          },
          "MatchRandom.ts@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "traffic": { "title": "Traffic", "type": "number" },
            },
            "required": ["traffic"],
            "title": "./matchers/MatchRandom.ts@Props",
            "$id": "./matchers/MatchRandom.ts@Props",
          },
          "MatchRandom.ts": {
            "title": "./matchers/MatchRandom.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/./matchers/MatchRandom.ts@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "const": "./matchers/MatchRandom.ts",
                "default": "./matchers/MatchRandom.ts",
              },
            },
            "$id": "./matchers/MatchRandom.ts",
          },
          "MatchEnvironment.ts@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "environment": {
                "title": "Environment",
                "anyOf": [{ "type": "string", "const": "production" }, {
                  "type": "string",
                  "const": "development",
                }],
              },
            },
            "required": ["environment"],
            "title": "./matchers/MatchEnvironment.ts@Props",
            "$id": "./matchers/MatchEnvironment.ts@Props",
          },
          "MatchEnvironment.ts": {
            "title": "./matchers/MatchEnvironment.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/./matchers/MatchEnvironment.ts@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "const": "./matchers/MatchEnvironment.ts",
                "default": "./matchers/MatchEnvironment.ts",
              },
            },
            "$id": "./matchers/MatchEnvironment.ts",
          },
          "MatchAlways.ts": {
            "title": "./matchers/MatchAlways.ts",
            "type": "object",
            "allOf": [],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "const": "./matchers/MatchAlways.ts",
                "default": "./matchers/MatchAlways.ts",
              },
            },
            "$id": "./matchers/MatchAlways.ts",
          },
        },
        "record<string, Resolvable>": {
          "title": "Unknown record",
          "type": "object",
          "additionalProperties": { "$ref": "#/root/state" },
          "$id": "./record<string, Resolvable>",
        },
        "flags": {
          "audience.ts@Audience": {
            "type": "object",
            "allOf": [],
            "properties": {
              "matcher": { "title": "Matcher", "$ref": "#/root/matchers" },
              "name": { "title": "Name", "type": "string" },
              "state": {
                "title": "State",
                "$ref": "#/definitions/./record<string, Resolvable>",
              },
            },
            "required": ["matcher", "name", "state"],
            "title": "./flags/audience.ts@Audience",
            "$id": "./flags/audience.ts@Audience",
          },
          "audience.ts": {
            "title": "./flags/audience.ts",
            "type": "object",
            "allOf": [{ "$ref": "#/definitions/./flags/audience.ts@Audience" }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "const": "./flags/audience.ts",
                "default": "./flags/audience.ts",
              },
            },
            "$id": "./flags/audience.ts",
          },
          "everyone.ts@EveryoneConfig": {
            "type": "object",
            "allOf": [],
            "properties": {
              "state": {
                "title": "State",
                "$ref": "#/definitions/./record<string, Resolvable>",
              },
            },
            "required": [],
            "title": "./flags/everyone.ts@EveryoneConfig",
            "$id": "./flags/everyone.ts@EveryoneConfig",
          },
          "everyone.ts": {
            "title": "./flags/everyone.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/./flags/everyone.ts@EveryoneConfig",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "const": "./flags/everyone.ts",
                "default": "./flags/everyone.ts",
              },
            },
            "$id": "./flags/everyone.ts",
          },
        },
      },
    },
    "root": {
      "routes": {
        "title": "routes",
        "anyOf": [{ "$ref": "#/definitions/./routes/[...catchall].tsx" }],
      },
      "handlers": {
        "title": "handlers",
        "anyOf": [{ "$ref": "#/definitions/./handlers/router.ts" }, {
          "$ref": "#/definitions/./handlers/fresh.ts",
        }],
      },
      "pages": {
        "title": "pages",
        "anyOf": [{ "$ref": "#/definitions/./pages/LivePage.tsx" }],
      },
      "sections": {
        "title": "sections",
        "anyOf": [{ "$ref": "#/definitions/./sections/Head.tsx" }],
      },
      "matchers": {
        "title": "matchers",
        "anyOf": [
          { "$ref": "#/definitions/./matchers/MatchDate.ts" },
          { "$ref": "#/definitions/./matchers/MatchUserAgent.ts" },
          { "$ref": "#/definitions/./matchers/MatchSite.ts" },
          { "$ref": "#/definitions/./matchers/MatchMulti.ts" },
          { "$ref": "#/definitions/./matchers/MatchRandom.ts" },
          { "$ref": "#/definitions/./matchers/MatchEnvironment.ts" },
          { "$ref": "#/definitions/./matchers/MatchAlways.ts" },
        ],
      },
      "flags": {
        "title": "flags",
        "anyOf": [{ "$ref": "#/definitions/./flags/audience.ts" }, {
          "$ref": "#/definitions/./flags/everyone.ts",
        }],
      },
      "state": {
        "type": "object",
        "required": ["./routes/[...catchall].tsx"],
        "properties": {
          "./routes/[...catchall].tsx": {
            "$ref": "#/definitions/./routes/[...catchall].tsx",
          },
        },
        "additionalProperties": {
          "anyOf": [
            { "$ref": "#/root/routes" },
            { "$ref": "#/root/handlers" },
            { "$ref": "#/root/pages" },
            { "$ref": "#/root/sections" },
            { "$ref": "#/root/matchers" },
            { "$ref": "#/root/flags" },
          ],
        },
      },
    },
  },
};

export default configurable(manifest);
