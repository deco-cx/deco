name: ci

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main
jobs:
  test:
    strategy:
      matrix:
        os: [deco-runner, windows-latest]
    runs-on: ${{ matrix.os }}
    name: "Setup deno"
    steps:
      - uses: actions/checkout@v3
      - name: cache deno installation and deno.land dependencies
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-deno-${{ hashFiles('**/*') }}
          restore-keys: ${{ runner.os }}-deno-
          path: |
            /home/runner/.deno
            /home/runner/.cache/deno/deps/https/deno.land
      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
      - name: Build Deno Module
        run: deno run -A --lock=deno.lock --frozen=false --reload mod.ts
      - name: fetch any uncached dependencies
        run: |
          deno cache --lock=deno.lock --frozen=false --reload=file: ./mod.ts

      - run: |
          deno test --lock=deno.lock --frozen=false -A .
      - run: |
          deno bench --lock=deno.lock --frozen=false -A .
      - name: check lint
        continue-on-error: true
        run: |
          deno --unstable lint
      - name: check formatting
        continue-on-error: true
        run: |
          deno fmt --check
